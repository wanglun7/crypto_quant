[tool.poetry]
name = "crypto-quant"
version = "0.1.0"
description = "BTC perpetual contract quantitative trading system"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
packages = [{include = "crypto_quant"}]

[tool.poetry.dependencies]
python = "^3.11"
pandas = "^2.0.0"
numpy = "^1.24.0"
ccxt = "^4.0.0"
talib = "^0.4.28"
matplotlib = "^3.7.0"
scikit-learn = "^1.3.0"
asyncpg = "^0.29.0"
structlog = "^23.2.0"
pyarrow = "^13.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
ruff = "^0.1.0"
pytest-asyncio = "^0.21.0"
mypy = "^1.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["B011"]  # assert_raises(Exception)

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "ccxt.*",
    "talib.*",
    "matplotlib.*",
    "sklearn.*",
    "structlog.*",
    "asyncpg.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = [
    "crypto_quant.*.tests.*",
    "tests.*",
]
ignore_errors = true